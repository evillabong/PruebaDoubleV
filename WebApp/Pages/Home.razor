@page "/"
@using WebApp.Views

<h3>Inicio de sesión</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Correo electrónico</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Username" disable=@load />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText Class="form-control" type="password" placeholder="Contraseña" @bind-Value="@loginModel.Password" disable=@load />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
            @if (load)
        {
            <LoaderView></LoaderView>
        }
    <button type="submit" class="btn btn-primary" disable=@load>Iniciar sesión</button>
</EditForm>


@code{
    GetLoginParam loginModel = new GetLoginParam();
    bool load = false;
    private async Task HandleValidSubmit()
    {
        var httpclient = new HttpClient();
        httpclient.GetAsync(/)

        var encryptor = new InsaneIO.Insane.Cryptography.RsaEncryptor();
        encryptor.KeyPair = new InsaneIO.Insane.Cryptography.RsaKeyPair
        {
            PublicKey = 
        }
        var encrypted = InsaneIO.Insane. EncryptEncodedRsa(publicKey, encoder);

    }
}